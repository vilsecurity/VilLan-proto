syntax = "proto3"

import "google/protobuf/any.proto";
import "google/protobuf/descriptor.proto";

import "./api.proto"

service SensorController {
  // The connection should be dropped on failure, after responding
  rpc init (InitRequest) returns (InitResponse);

  rpc push (Push) returns (PushResponse);
}

// Sent by the sensor on initialisation
message InitRequest {
  // A human-readable non-unique name of the type of device
  // (i.e. "WibbleWobble light switch")
  string name = 1;
  // The formats of the pushed data.
  // If your use case is not covered by any of the apis in the 'api.proto',
  // please submit a pull request with your own. 
  //
  // Please don't just make your own, and break everything.
  //
  // Please.
  map<string, ApiType> apis = 2;
}

// Sent by the controller to acknowlege a controller
message InitReponse {
}


// Sent by the node to indicate data should be replicated to the network
message Push {
  string api_name = 1;
  // The encoding of the api specified in the init
  bytes payload = 2;
}

message PushResponse {
}
